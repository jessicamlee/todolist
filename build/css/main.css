*,*::before,*::after{box-sizing:border-box}html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font-size:100%;vertical-align:baseline}:focus{outline:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:"";content:none}table{border-collapse:collapse;border-spacing:0}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{-webkit-appearance:none;-moz-appearance:none}input[type=search]{-webkit-appearance:none;-moz-appearance:none;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box}textarea{overflow:auto;vertical-align:top;resize:vertical}audio,canvas,video{display:inline-block;*display:inline;*zoom:1;max-width:100%}audio:not([controls]){display:none;height:0}[hidden]{display:none}html{font-size:100%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}a:focus{outline:thin dotted}a:active,a:hover{outline:0}img{border:0;-ms-interpolation-mode:bicubic}figure{margin:0}form{margin:0}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0;white-space:normal;*margin-left:-7px}button,input,select,textarea{font-size:100%;margin:0;vertical-align:baseline;*vertical-align:middle}button,input{line-height:normal}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer;*overflow:visible}button[disabled],html input[disabled]{cursor:default}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0;*height:13px;*width:13px}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}html,button,input,select,textarea{color:#222}::-moz-selection{background:#b3d4fc;text-shadow:none}::selection{background:#b3d4fc;text-shadow:none}img{vertical-align:middle}fieldset{border:0;margin:0;padding:0}textarea{resize:vertical}.chromeframe{margin:.2em 0;background:#ccc;color:#000;padding:.2em 0}.theme-wrapper{width:100%}.container{padding:6.25em 3.125em;max-width:48em;min-width:29.75em;position:relative}.indent{margin-left:2em}.margin-center{margin:0 auto}h1{font-size:4em}h2{font-size:2.5em;margin-bottom:.1em}p{font-size:1.25em}.line-height{line-height:1.5em}.subtitle{color:#fff;font-size:1em;font-weight:400;font-style:italic;margin-bottom:2.5em}body{background-color:#292c35;color:#fff;font-family:"Jost",sans-serif;font-weight:400;font-size:16px;overflow:none}body.light{background-color:#fff;color:#292c35}body.light .subtitle{color:#292c35}body.light ul li.light,body.light .alert-heading{color:#fff}.header{text-align:center}.header :after{content:"";display:table;clear:both}.toggle{position:absolute;bottom:0;right:7.5em}.toggle .checkbox{opacity:0;position:absolute}.toggle .checkbox:checked+.label .ball{transform:translateX(1.8em)}.toggle .label{width:3.5em;height:1.75em;background-color:#111;border-radius:3em;display:flex;align-items:center;justify-content:space-between;padding:.31em;position:absolute;transform:scale(1.5);margin-top:1.5em;box-shadow:0 .25em .25em rgba(0,0,0,.25)}.toggle .label .fas{font-size:1em}.toggle .label .fa-moon{color:#9aa7ff}.toggle .label .fa-sun{color:#ffcf4a}.toggle .label .ball{width:1.3em;height:1.3em;background-color:#fff;position:absolute;top:.25em;left:.18em;border-radius:50%;transition:transform .25s linear}.input-field{display:flex;margin-bottom:1.2em}.input-field input{margin:0;width:80%;padding:.75em;float:left;border-radius:1.5em;margin-right:1em;box-shadow:0 .25em .25em rgba(0,0,0,.25)}ul{margin:0;padding:0}li{cursor:pointer;position:relative;padding:.75em .5em .75em 2.5em;background:#233294;color:#fff;font-size:1.12em;font-weight:400;font-style:normal;transition:.3s;margin-bottom:.5em;border-radius:1.5em;padding:.7em 2.5em;box-shadow:0 .25em .25em rgba(0,0,0,.25);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}li:nth-child(0){margin-top:1.2em}li:nth-child(odd){background:#7c8dfb}li.checked{background:#6e727a;color:#fff;text-decoration:line-through}li.checked::before{content:"";position:absolute;border:#fff solid;border-width:0 .125em .125em 0;top:.625em;left:1em;transform:rotate(45deg);height:1em;width:.5em}.close{position:absolute;top:0;right:0;padding:.75em 1em .75em 1em}.addBtn{padding:1em;width:20%;background:#ffcf4a;color:#292c35;color:#292c35;font-size:1em;font-weight:500;font-style:normal;float:left;cursor:pointer;transition:.3s;border-radius:1.5em;box-shadow:0 .25em .25em rgba(0,0,0,.25);text-align:center}.modal-container .modal{display:none;position:fixed;z-index:1;width:100%;height:100%;left:0;top:0;overflow:none;background-color:rgba(7,7,7,.95)}.modal-container .modal-txt{margin:15% auto;padding:1em;width:80%;display:flex;flex-direction:column;padding:2em;text-align:center;animation:modalPop .5s ease-in-out;-webkit-animation:modalPop .5s ease-in-out}.modal-container #close-modal{color:#fff;position:absolute;top:5em;right:4.5em;font-size:1.75em;font-weight:bold}.modal-container #close-modal:hover,.modal-container #close-modal:focus{color:#eb0000;text-decoration:none;cursor:pointer}.modal-container .alert-heading{font-size:2.2em;margin:1em auto .6em}.modal-container .alert-mssg{color:#fff;font-size:1em;font-weight:400;font-style:italic}footer{position:fixed;left:0;bottom:0;width:100%;padding:1em 2em 1.5em}footer p{color:#fff;font-size:.9em;font-weight:400;font-style:400;text-align:center;margin-top:.5em}@keyframes modalPop{0%{transform:scale(0);-webkit-transform:scale(0)}100%{transform:scale(1);-webkit-transform:scale(1)}}@media(min-width: 1024px){.close:hover{background-color:#eb0000;color:#fff;border-radius:1.5em}.addBtn:hover{background-color:#233294;color:#fff}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdsb2JhbC9fcmVzZXQuc2NzcyIsImdsb2JhbC9faGVscGVycy5zY3NzIiwidXRpbGl0aWVzL192YXJpYWJsZXMuc2NzcyIsImdsb2JhbC9fdHlwb2dyYXBoeS5zY3NzIiwidXRpbGl0aWVzL19taXhpbnMuc2NzcyIsImdsb2JhbC9fZ2xvYmFsLnNjc3MiLCJwYXJ0aWFscy9faGVhZGVyLnNjc3MiLCJ0b2RvbGlzdC9fdG9nZ2xlLnNjc3MiLCJ0b2RvbGlzdC9faW5wdXRmaWVsZC5zY3NzIiwidG9kb2xpc3QvX2J1dHRvbnMuc2NzcyIsInRvZG9saXN0L19tb2RhbC5zY3NzIiwicGFydGlhbHMvX2Zvb3Rlci5zY3NzIiwia2V5ZnJhbWVzL19rZXlmcmFtZXMuc2NzcyIsInF1ZXJpZXMvXzEwMjRweC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUtBLHFCQUdFLHNCQUdGLDJaQWFJLFNBQ0EsVUFDQSxTQUNBLGVBQ0Esd0JBSUosT0FDSSxVQUlKLDhFQUVJLGNBR0osS0FDSSxjQUdKLE1BQ0ksZ0JBR0osYUFDSSxZQUdKLG9EQUVJLFdBQ0EsYUFHSixNQUNJLHlCQUNBLGlCQUdKLHVNQUlJLHdCQUNBLHFCQUdKLG1CQUNJLHdCQUNBLHFCQUNBLCtCQUNBLDRCQUNBLHVCQUdKLFNBQ0ksY0FDQSxtQkFDQSxnQkFPSixtQkFHSSxxQkFDQSxnQkFDQSxRQUNBLGVBUUosc0JBQ0ksYUFDQSxTQVFKLFNBQ0ksYUFVSixLQUNJLGVBQ0EsOEJBQ0EsMEJBT0osUUFDSSxvQkFPSixpQkFFSSxVQVFKLElBQ0ksU0FDQSwrQkFPSixPQUNJLFNBT0osS0FDSSxTQU9KLFNBQ0ksd0JBQ0EsYUFDQSwyQkFTSixPQUNJLFNBQ0EsVUFDQSxtQkFDQSxrQkFVSiw2QkFJSSxlQUNBLFNBQ0Esd0JBQ0EsdUJBUUosYUFFSSxtQkFVSixjQUVJLG9CQWFKLG9FQUlJLDBCQUNBLGVBQ0Esa0JBT0osc0NBRUksZUFVSix1Q0FFSSxzQkFDQSxVQUNBLGFBQ0EsWUFTSixtQkFDSSw2QkFDQSw0QkFDQSwrQkFDQSx1QkFRSiwrRkFFSSx3QkFPSixpREFFSSxTQUNBLFVBUUosU0FDSSxjQUNBLG1CQU9KLE1BQ0kseUJBQ0EsaUJBR0osa0NBS0ksV0FJSixpQkFDSSxtQkFDQSxpQkFHSixZQUNJLG1CQUNBLGlCQUdKLElBQ0ksc0JBR0osU0FDSSxTQUNBLFNBQ0EsVUFHSixTQUNJLGdCQUdKLGFBQ0ksY0FDQSxnQkFDQSxXQUNBLGVDL1dKLGVBQ0ksV0FHSixXQUNJLHVCQUNBLGVBQ0Esa0JBQ0Esa0JBR0osUUFDSSxZQ0dDLG1CRENELGNFaEJKLEdBQ0ksY0FHSixHQUNJLFVEV0MsTUNWRCxtQkFHSixFQUNJLGlCQUdKLGFBQ0ksa0JBR0osVUNsQkksTUZDSSxlQWFILElFWkQsWUZxQkssSUVwQkwsV0YwQkssT0NUTCxvQkVoQkosS0FDSSxpQkhIUSxRR0lSLE1ITEksS0dNSiw4QkFDQSxnQkFDQSxlQUNBLGNBRUEsV0FDSSxpQkhaQSxLR2FBLE1IWkksUUdjSixxQkFDSSxNSGZBLFFHa0JKLGlEQUNJLE1IcEJKLGFJQ0osa0JBRUEsZUFDSSxXQUNBLGNBQ0EsV0NOUixRQUNJLGtCQUNBLFNBQ0EsWUFFQSxrQkFDSSxVQUNBLGtCQUVBLHVDQUNJLDRCQUlSLGVIUkEsTUdTa0IsTUhSbEIsT0dRMEIsT0FDdEIsaUJMUEEsS0tRQSxrQkFDQSxhQUNBLG1CQUNBLDhCQUNBLGNBQ0Esa0JBQ0EscUJBQ0EsV0xWSCxNS1dHLHlDQUVBLG9CQUNJLFVMZlAsSUtrQkcsd0JBQ0ksTUwzQkQsUUs4QkgsdUJBQ0ksTUxoQ0EsUUttQ0oscUJIakNKLE1Ha0NzQixNSGpDdEIsT0dpQzhCLE1BQ3RCLGlCTHpDSixLSzBDSSxrQkFDQSxVQUNBLFdBQ0Esa0JBQ0EsaUNDOUNaLGFBQ0ksYUFDQSxvQkFFQSxtQkFDSSxTQUNBLFVBQ0EsY0FDQSxXQUNBLGNOS0gsTU1KRyxhTkdILElNRkcseUNBSVIsR0FDSSxTQUNBLFVBR0osR0FDSSxlQUNBLGtCQUNBLCtCQUNBLFdObEJHLFFFUEgsTUZDSSxlTXlCa0IsT0p4QnRCLFlGcUJLLElFcEJMLFdGMkJHLE9NSEgsZUFDQSxjTmZDLEtNZ0JELGNOZEMsTU1lRCxtQkFDQSx5Q0FDQSx5QkFDQSxzQkFDQSxxQkFDQSxpQkFFQSxnQkFDSSxpQkFHSixrQkFDSSxXTmxDSyxRTXFDVCxXQUNJLFdOckNELFFNc0NDLE1OOUNBLEtNK0NBLDZCQUVBLG1CQUNJLFdBQ0Esa0JBQ0Esa0JBQ0EsK0JBQ0EsV0FDQSxLTjFDUCxJTTJDTyx3QkFDQSxPTjVDUCxJTTZDTyxNTjlDUCxLT1pMLE9BQ0ksa0JBQ0EsTUFDQSxRQUNBLDRCQUdKLFFBQ0ksUVBLQyxJT0pELFVBQ0EsV1BOUSxRT09SLE1QVlEsUUVGUixNRkVRLFFFRFIsVUZhQyxJRVpELFlGc0JLLElFckJMLFdGMkJHLE9PaEJILFdBQ0EsZUFDQSxlQUNBLGNQRkMsTU9HRCx5Q0FDQSxrQkNoQkEsd0JBQ0ksYUFDQSxlQUNBLFVBQ0EsV0FDQSxZQUNBLE9BQ0EsTUFDQSxjQUNBLGlCUlRLLGdCUVlULDRCQUNJLGdCQUNBLFFSSEgsSVFJRyxVQUNBLGFBQ0Esc0JBQ0EsUVJMSCxJUU1HLGtCQUNBLG1DQUNBLDJDQUdKLDhCQUNJLFdBQ0Esa0JBQ0EsUUFDQSxZQUNBLGlCQUNBLGlCQUVBLHdFQUVJLE1SckNOLFFRc0NNLHFCQUNBLGVBSVIsZ0NBQ0ksZ0JBQ0EscUJBR0osNkJOaERBLE1GQ0ksZUFhSCxJRVpELFlGcUJLLElFcEJMLFdGMEJLLE9TNUJULE9BQ0ksZUFDQSxPQUNBLFNBQ0EsV0FDQSxzQkFFQSxTUFJBLE1GQ0ksZVNRc0IsS1BQMUIsWUZxQkssSUVwQkwsV0ZvQkssSVNiRCxrQkFDQSxXVEVILEtVZEwsb0JBQ0ksR0FDSSxtQkFDQSwyQkFFSixLQUNJLG1CQUNBLDRCQ0xSLDBCQUNJLGFBQ0ksaUJYSEYsUVdJRSxNWEhBLEtXSUEsY1hVSCxNV1BELGNBQ0ksaUJYRkQsUVdHQyxNWFRBIiwiZmlsZSI6Im1haW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogaHR0cDovL21leWVyd2ViLmNvbS9lcmljL3Rvb2xzL2Nzcy9yZXNldC9cclxuICAgdjIuMC1tb2RpZmllZCB8IDIwMTEwMTI2XHJcbiAgIExpY2Vuc2U6IG5vbmUgKHB1YmxpYyBkb21haW4pXHJcbiovXHJcblxyXG4qLFxyXG4qOjpiZWZvcmUsXHJcbio6OmFmdGVyIHtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG5odG1sLCBib2R5LCBkaXYsIHNwYW4sIGFwcGxldCwgb2JqZWN0LCBpZnJhbWUsXHJcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAsIGJsb2NrcXVvdGUsIHByZSxcclxuYSwgYWJiciwgYWNyb255bSwgYWRkcmVzcywgYmlnLCBjaXRlLCBjb2RlLFxyXG5kZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHMsIHNhbXAsXHJcbnNtYWxsLCBzdHJpa2UsIHN0cm9uZywgc3ViLCBzdXAsIHR0LCB2YXIsXHJcbmIsIHUsIGksIGNlbnRlcixcclxuZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSxcclxuZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsXHJcbnRhYmxlLCBjYXB0aW9uLCB0Ym9keSwgdGZvb3QsIHRoZWFkLCB0ciwgdGgsIHRkLFxyXG5hcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBlbWJlZCxcclxuZmlndXJlLCBmaWdjYXB0aW9uLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLFxyXG5tZW51LCBuYXYsIG91dHB1dCwgcnVieSwgc2VjdGlvbiwgc3VtbWFyeSxcclxudGltZSwgbWFyaywgYXVkaW8sIHZpZGVvIHtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgICBmb250LXNpemU6IDEwMCU7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcbn1cclxuXHJcbi8qIG1ha2Ugc3VyZSB0byBzZXQgc29tZSBmb2N1cyBzdHlsZXMgZm9yIGFjY2Vzc2liaWxpdHkgKi9cclxuOmZvY3VzIHtcclxuICAgIG91dGxpbmU6IDA7XHJcbn1cclxuXHJcbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cclxuYXJ0aWNsZSwgYXNpZGUsIGRldGFpbHMsIGZpZ2NhcHRpb24sIGZpZ3VyZSxcclxuZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBzZWN0aW9uIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG5ib2R5IHtcclxuICAgIGxpbmUtaGVpZ2h0OiAxO1xyXG59XHJcblxyXG5vbCwgdWwge1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxufVxyXG5cclxuYmxvY2txdW90ZSwgcSB7XHJcbiAgICBxdW90ZXM6IG5vbmU7XHJcbn1cclxuXHJcbmJsb2NrcXVvdGU6YmVmb3JlLCBibG9ja3F1b3RlOmFmdGVyLFxyXG5xOmJlZm9yZSwgcTphZnRlciB7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIGNvbnRlbnQ6IG5vbmU7XHJcbn1cclxuXHJcbnRhYmxlIHtcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgICBib3JkZXItc3BhY2luZzogMDtcclxufVxyXG5cclxuaW5wdXRbdHlwZT1zZWFyY2hdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxyXG5pbnB1dFt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24sXHJcbmlucHV0W3R5cGU9c2VhcmNoXTo6LXdlYmtpdC1zZWFyY2gtcmVzdWx0cy1idXR0b24sXHJcbmlucHV0W3R5cGU9c2VhcmNoXTo6LXdlYmtpdC1zZWFyY2gtcmVzdWx0cy1kZWNvcmF0aW9uIHtcclxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxuICAgIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcclxufVxyXG5cclxuaW5wdXRbdHlwZT1zZWFyY2hdIHtcclxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxuICAgIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcclxuICAgIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7XHJcbiAgICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xyXG4gICAgYm94LXNpemluZzogY29udGVudC1ib3g7XHJcbn1cclxuXHJcbnRleHRhcmVhIHtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICAgIHJlc2l6ZTogdmVydGljYWw7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgNi83LzgvOSBhbmQgRmlyZWZveCAzLlxyXG4gKi9cclxuXHJcbmF1ZGlvLFxyXG5jYW52YXMsXHJcbnZpZGVvIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICpkaXNwbGF5OiBpbmxpbmU7XHJcbiAgICAqem9vbTogMTtcclxuICAgIG1heC13aWR0aDogMTAwJTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFByZXZlbnQgbW9kZXJuIGJyb3dzZXJzIGZyb20gZGlzcGxheWluZyBgYXVkaW9gIHdpdGhvdXQgY29udHJvbHMuXHJcbiAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXHJcbiAqL1xyXG5cclxuYXVkaW86bm90KFtjb250cm9sc10pIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICBoZWlnaHQ6IDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgNy84LzksIEZpcmVmb3ggMywgYW5kIFNhZmFyaSA0LlxyXG4gKiBLbm93biBpc3N1ZTogbm8gSUUgNiBzdXBwb3J0LlxyXG4gKi9cclxuXHJcbltoaWRkZW5dIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRleHQgcmVzaXppbmcgb2RkbHkgaW4gSUUgNi83IHdoZW4gYm9keSBgZm9udC1zaXplYCBpcyBzZXQgdXNpbmdcclxuICogICAgYGVtYCB1bml0cy5cclxuICogMi4gUHJldmVudCBpT1MgdGV4dCBzaXplIGFkanVzdCBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2UsIHdpdGhvdXQgZGlzYWJsaW5nXHJcbiAqICAgIHVzZXIgem9vbS5cclxuICovXHJcblxyXG5odG1sIHtcclxuICAgIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xyXG4gICAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXHJcbiAgICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogQWRkcmVzcyBgb3V0bGluZWAgaW5jb25zaXN0ZW5jeSBiZXR3ZWVuIENocm9tZSBhbmQgb3RoZXIgYnJvd3NlcnMuXHJcbiAqL1xyXG5cclxuYTpmb2N1cyB7XHJcbiAgICBvdXRsaW5lOiB0aGluIGRvdHRlZDtcclxufVxyXG5cclxuLyoqXHJcbiAqIEltcHJvdmUgcmVhZGFiaWxpdHkgd2hlbiBmb2N1c2VkIGFuZCBhbHNvIG1vdXNlIGhvdmVyZWQgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbmE6YWN0aXZlLFxyXG5hOmhvdmVyIHtcclxuICAgIG91dGxpbmU6IDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDYvNy84LzkgYW5kIEZpcmVmb3ggMy5cclxuICogMi4gSW1wcm92ZSBpbWFnZSBxdWFsaXR5IHdoZW4gc2NhbGVkIGluIElFIDcuXHJcbiAqL1xyXG5cclxuaW1nIHtcclxuICAgIGJvcmRlcjogMDsgLyogMSAqL1xyXG4gICAgLW1zLWludGVycG9sYXRpb24tbW9kZTogYmljdWJpYzsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogQWRkcmVzcyBtYXJnaW4gbm90IHByZXNlbnQgaW4gSUUgNi83LzgvOSwgU2FmYXJpIDUsIGFuZCBPcGVyYSAxMS5cclxuICovXHJcblxyXG5maWd1cmUge1xyXG4gICAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG4vKipcclxuICogQ29ycmVjdCBtYXJnaW4gZGlzcGxheWVkIG9kZGx5IGluIElFIDYvNy5cclxuICovXHJcblxyXG5mb3JtIHtcclxuICAgIG1hcmdpbjogMDtcclxufVxyXG5cclxuLyoqXHJcbiAqIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cclxuICovXHJcblxyXG5maWVsZHNldCB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xyXG4gICAgbWFyZ2luOiAwIDJweDtcclxuICAgIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgY29sb3Igbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRSA2LzcvOC85LlxyXG4gKiAyLiBDb3JyZWN0IHRleHQgbm90IHdyYXBwaW5nIGluIEZpcmVmb3ggMy5cclxuICogMy4gQ29ycmVjdCBhbGlnbm1lbnQgZGlzcGxheWVkIG9kZGx5IGluIElFIDYvNy5cclxuICovXHJcblxyXG5sZWdlbmQge1xyXG4gICAgYm9yZGVyOiAwOyAvKiAxICovXHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMiAqL1xyXG4gICAgKm1hcmdpbi1sZWZ0OiAtN3B4OyAvKiAzICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IGZvbnQgc2l6ZSBub3QgYmVpbmcgaW5oZXJpdGVkIGluIGFsbCBicm93c2Vycy5cclxuICogMi4gQWRkcmVzcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBJRSA2LzcsIEZpcmVmb3ggMyssIFNhZmFyaSA1LFxyXG4gKiAgICBhbmQgQ2hyb21lLlxyXG4gKiAzLiBJbXByb3ZlIGFwcGVhcmFuY2UgYW5kIGNvbnNpc3RlbmN5IGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5idXR0b24sXHJcbmlucHV0LFxyXG5zZWxlY3QsXHJcbnRleHRhcmVhIHtcclxuICAgIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xyXG4gICAgbWFyZ2luOiAwOyAvKiAyICovXHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IC8qIDMgKi9cclxuICAgICp2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyAvKiAzICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGRyZXNzIEZpcmVmb3ggMysgc2V0dGluZyBgbGluZS1oZWlnaHRgIG9uIGBpbnB1dGAgdXNpbmcgYCFpbXBvcnRhbnRgIGluXHJcbiAqIHRoZSBVQSBzdHlsZXNoZWV0LlxyXG4gKi9cclxuXHJcbmJ1dHRvbixcclxuaW5wdXQge1xyXG4gICAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cclxuICogQWxsIG90aGVyIGZvcm0gY29udHJvbCBlbGVtZW50cyBkbyBub3QgaW5oZXJpdCBgdGV4dC10cmFuc2Zvcm1gIHZhbHVlcy5cclxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBDaHJvbWUsIFNhZmFyaSA1KywgYW5kIElFIDYrLlxyXG4gKiBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3ggNCsgYW5kIE9wZXJhLlxyXG4gKi9cclxuXHJcbmJ1dHRvbixcclxuc2VsZWN0IHtcclxuICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQXZvaWQgdGhlIFdlYktpdCBidWcgaW4gQW5kcm9pZCA0LjAuKiB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2BcclxuICogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXHJcbiAqIDIuIENvcnJlY3QgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSBgaW5wdXRgIHR5cGVzIGluIGlPUy5cclxuICogMy4gSW1wcm92ZSB1c2FiaWxpdHkgYW5kIGNvbnNpc3RlbmN5IG9mIGN1cnNvciBzdHlsZSBiZXR3ZWVuIGltYWdlLXR5cGVcclxuICogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxyXG4gKiA0LiBSZW1vdmUgaW5uZXIgc3BhY2luZyBpbiBJRSA3IHdpdGhvdXQgYWZmZWN0aW5nIG5vcm1hbCB0ZXh0IGlucHV0cy5cclxuICogICAgS25vd24gaXNzdWU6IGlubmVyIHNwYWNpbmcgcmVtYWlucyBpbiBJRSA2LlxyXG4gKi9cclxuXHJcbmJ1dHRvbixcclxuaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXHJcbmlucHV0W3R5cGU9XCJyZXNldFwiXSxcclxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XHJcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xyXG4gICAgY3Vyc29yOiBwb2ludGVyOyAvKiAzICovXHJcbiAgICAqb3ZlcmZsb3c6IHZpc2libGU7ICAvKiA0ICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZS1zZXQgZGVmYXVsdCBjdXJzb3IgZm9yIGRpc2FibGVkIGVsZW1lbnRzLlxyXG4gKi9cclxuXHJcbmJ1dHRvbltkaXNhYmxlZF0sXHJcbmh0bWwgaW5wdXRbZGlzYWJsZWRdIHtcclxuICAgIGN1cnNvcjogZGVmYXVsdDtcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gY29udGVudC1ib3ggaW4gSUUgOC85LlxyXG4gKiAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LlxyXG4gKiAzLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgNy5cclxuICogICAgS25vd24gaXNzdWU6IGV4Y2VzcyBwYWRkaW5nIHJlbWFpbnMgaW4gSUUgNi5cclxuICovXHJcblxyXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sXHJcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXHJcbiAgICBwYWRkaW5nOiAwOyAvKiAyICovXHJcbiAgICAqaGVpZ2h0OiAxM3B4OyAvKiAzICovXHJcbiAgICAqd2lkdGg6IDEzcHg7IC8qIDMgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIEFkZHJlc3MgYGFwcGVhcmFuY2VgIHNldCB0byBgc2VhcmNoZmllbGRgIGluIFNhZmFyaSA1IGFuZCBDaHJvbWUuXHJcbiAqIDIuIEFkZHJlc3MgYGJveC1zaXppbmdgIHNldCB0byBgYm9yZGVyLWJveGAgaW4gU2FmYXJpIDUgYW5kIENocm9tZVxyXG4gKiAgICAoaW5jbHVkZSBgLW1vemAgdG8gZnV0dXJlLXByb29mKS5cclxuICovXHJcblxyXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdIHtcclxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXHJcbiAgICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xyXG4gICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMiAqL1xyXG4gICAgYm94LXNpemluZzogY29udGVudC1ib3g7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgc2VhcmNoIGNhbmNlbCBidXR0b24gaW4gU2FmYXJpIDUgYW5kIENocm9tZVxyXG4gKiBvbiBPUyBYLlxyXG4gKi9cclxuXHJcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXHJcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xyXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG59XHJcblxyXG4vKipcclxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIGJvcmRlciBpbiBGaXJlZm94IDMrLlxyXG4gKi9cclxuXHJcbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcclxuaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xyXG4gICAgYm9yZGVyOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIFJlbW92ZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSA2LzcvOC85LlxyXG4gKiAyLiBJbXByb3ZlIHJlYWRhYmlsaXR5IGFuZCBhbGlnbm1lbnQgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbnRleHRhcmVhIHtcclxuICAgIG92ZXJmbG93OiBhdXRvOyAvKiAxICovXHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgbW9zdCBzcGFjaW5nIGJldHdlZW4gdGFibGUgY2VsbHMuXHJcbiAqL1xyXG5cclxudGFibGUge1xyXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICAgIGJvcmRlci1zcGFjaW5nOiAwO1xyXG59XHJcblxyXG5odG1sLFxyXG5idXR0b24sXHJcbmlucHV0LFxyXG5zZWxlY3QsXHJcbnRleHRhcmVhIHtcclxuICAgIGNvbG9yOiAjMjIyO1xyXG59XHJcblxyXG5cclxuOjotbW96LXNlbGVjdGlvbiB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjYjNkNGZjO1xyXG4gICAgdGV4dC1zaGFkb3c6IG5vbmU7XHJcbn1cclxuXHJcbjo6c2VsZWN0aW9uIHtcclxuICAgIGJhY2tncm91bmQ6ICNiM2Q0ZmM7XHJcbiAgICB0ZXh0LXNoYWRvdzogbm9uZTtcclxufVxyXG5cclxuaW1nIHtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbn1cclxuXHJcbmZpZWxkc2V0IHtcclxuICAgIGJvcmRlcjogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbnRleHRhcmVhIHtcclxuICAgIHJlc2l6ZTogdmVydGljYWw7XHJcbn1cclxuXHJcbi5jaHJvbWVmcmFtZSB7XHJcbiAgICBtYXJnaW46IDAuMmVtIDA7XHJcbiAgICBiYWNrZ3JvdW5kOiAjY2NjO1xyXG4gICAgY29sb3I6ICMwMDA7XHJcbiAgICBwYWRkaW5nOiAwLjJlbSAwO1xyXG59XHJcbiIsIkB1c2UgJy4uL3V0aWxpdGllcycgYXMgKjtcclxuXHJcbi50aGVtZS13cmFwcGVyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uY29udGFpbmVyIHtcclxuICAgIHBhZGRpbmc6ICRzbSo2LjI1ICRzbSozLjEyNTtcclxuICAgIG1heC13aWR0aDogJHNtKjQ4O1xyXG4gICAgbWluLXdpZHRoOiAkc20qMjkuNzU7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5pbmRlbnQge1xyXG4gICAgbWFyZ2luLWxlZnQ6ICRsZztcclxufVxyXG5cclxuLm1hcmdpbi1jZW50ZXIge1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbn0iLCIvLyBDb2xvcnNcclxuJHJlZDogcmdiKDIzNSwgMCwgMCwgMSk7XHJcbiR3aGl0ZTogcmdiKDI1NSwgMjU1LCAyNTUsIDEpO1xyXG4kYmx1ZWJsYWNrOiByZ2JhKDQxLCA0NCwgNTMsIDEpO1xyXG4kbW9kYWxibGFjazogcmdiYSg3LCA3LCA3LCAwLjk1KTtcclxuJGJveHNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjI1KTtcclxuJHN1bnllbGxvdzogcmdiKDI1NSwgMjA3LCA3NCk7XHJcbiRtb29uYmx1ZTogcmdiKDE1NCwgMTY3LCAyNTUpO1xyXG4kbmF2eTogcmdiKDM1LCA1MCwgMTQ4KTtcclxuJHBlcml3aW5rbGU6IHJnYigxMjQsIDE0MSwgMjUxKTtcclxuJGdyZXk6IHJnYmEoMTEwLCAxMTQsIDEyMiwgMSk7XHJcbiRibGFjazogcmdiYSgxNywgMTcsIDE3LCAxKTtcclxuXHJcbi8vIFNpemVzXHJcbiR4czogMC41ZW07XHJcbiRzbTogMWVtO1xyXG4kbWQ6IDEuNWVtO1xyXG4kbGc6IDJlbTtcclxuJHhsOiAyLjVlbTtcclxuXHJcbi8vIEZvbnQgV2VpZ2h0XHJcbiR4eGxpZ2h0OiAxMDA7XHJcbiR4bGlnaHQ6IDIwMDtcclxuJGxpZ2h0OiAzMDA7XHJcbiRub3JtYWw6IDQwMDtcclxuJG1lZGl1bTogNTAwO1xyXG4kc2VtaWJvbGQ6IDYwMDtcclxuJGJvbGQ6IDcwMDtcclxuXHJcbi8vIEZvbnQgU3R5bGVcclxuJGl0YWxpYzogaXRhbGljO1xyXG4kYmFzZTogbm9ybWFsOyIsIkB1c2UgJy4uL3V0aWxpdGllcycgYXMgKjtcclxuXHJcbmgxIHtcclxuICAgIGZvbnQtc2l6ZTogJGxnKjI7XHJcbn1cclxuXHJcbmgyIHtcclxuICAgIGZvbnQtc2l6ZTogJHhsO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogJHNtKjAuMTtcclxufVxyXG5cclxucCB7XHJcbiAgICBmb250LXNpemU6ICRzbSoxLjI1O1xyXG59XHJcblxyXG4ubGluZS1oZWlnaHQge1xyXG4gICAgbGluZS1oZWlnaHQ6ICRtZDtcclxufVxyXG5cclxuLnN1YnRpdGxlIHtcclxuICAgIEBpbmNsdWRlIGZvbnQoJHdoaXRlLCAkc20sICRub3JtYWwsICRpdGFsaWMpO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMi41ZW07XHJcbn0iLCJAbWl4aW4gZm9udCgkY29sb3IsICRzaXplLCAkZm9udHdlaWdodCwgJGZvbnRzdHlsZSkge1xyXG4gICAgY29sb3I6ICRjb2xvcjtcclxuICAgIGZvbnQtc2l6ZTogJHNpemU7XHJcbiAgICBmb250LXdlaWdodDogJGZvbnR3ZWlnaHQ7XHJcbiAgICBmb250LXN0eWxlOiAkZm9udHN0eWxlO1xyXG59XHJcblxyXG5AbWl4aW4gc2l6ZSgkd2lkdGgsJGhlaWdodCkge1xyXG4gICAgd2lkdGg6ICR3aWR0aDtcclxuICAgIGhlaWdodDogJGhlaWdodDtcclxufSIsIkB1c2UgJy4uL3V0aWxpdGllcycgYXMgKjtcclxuXHJcbkB1c2UgJ2hlbHBlcnMnO1xyXG5AdXNlICd0eXBvZ3JhcGh5JztcclxuXHJcbmJvZHkge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGJsdWVibGFjaztcclxuICAgIGNvbG9yOiAkd2hpdGU7XHJcbiAgICBmb250LWZhbWlseTogJ0pvc3QnLCBzYW5zLXNlcmlmO1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIG92ZXJmbG93OiBub25lO1xyXG5cclxuICAgICYubGlnaHQge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcclxuICAgICAgICBjb2xvcjogJGJsdWVibGFjaztcclxuICAgIFxyXG4gICAgICAgIC5zdWJ0aXRsZSB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkYmx1ZWJsYWNrO1xyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIHVsIGxpLmxpZ2h0LCAuYWxlcnQtaGVhZGluZyB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkd2hpdGU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiQHVzZSAnLi4vdXRpbGl0aWVzJyBhcyAqO1xyXG5cclxuLmhlYWRlciB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gICAgOmFmdGVye1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgZGlzcGxheTogdGFibGU7XHJcbiAgICAgICAgY2xlYXI6IGJvdGg7XHJcbiAgICB9XHJcbn0iLCJAdXNlICcuLi91dGlsaXRpZXMnIGFzICo7XHJcblxyXG4udG9nZ2xlIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIHJpZ2h0OiAkc20qNy41O1xyXG5cclxuICAgIC5jaGVja2JveCB7XHJcbiAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBcclxuICAgICAgICAmOmNoZWNrZWQgKyAubGFiZWwgLmJhbGwge1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJHNtKjEuOCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5sYWJlbCB7XHJcbiAgICAgICAgQGluY2x1ZGUgc2l6ZSgkc20qMy41LCRzbSoxLjc1KTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmxhY2s7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogJG1kKjI7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICBwYWRkaW5nOiAkc20qMC4zMTtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjUpO1xyXG4gICAgICAgIG1hcmdpbi10b3A6ICRtZDtcclxuICAgICAgICBib3gtc2hhZG93OiAwICRzbSowLjI1ICRzbSowLjI1ICRib3hzaGFkb3c7XHJcblxyXG4gICAgICAgIC5mYXMge1xyXG4gICAgICAgICAgICBmb250LXNpemU6ICRzbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgLmZhLW1vb24ge1xyXG4gICAgICAgICAgICBjb2xvcjogJG1vb25ibHVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAuZmEtc3VuIHtcclxuICAgICAgICAgICAgY29sb3I6ICRzdW55ZWxsb3c7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuYmFsbCB7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIHNpemUoJHNtKjEuMywkc20qMS4zKTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHRvcDogJHNtKjAuMjU7XHJcbiAgICAgICAgICAgIGxlZnQ6ICRzbSowLjE4O1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjI1cyBsaW5lYXI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsIkB1c2UgJy4uL3V0aWxpdGllcycgYXMgKjtcclxuXHJcbi5pbnB1dC1maWVsZCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogJHNtKjEuMjtcclxuXHJcbiAgICBpbnB1dCB7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgcGFkZGluZzogJHNtKjAuNzU7XHJcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogJG1kO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogJHNtO1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDAgJHNtKjAuMjUgJHNtKjAuMjUgJGJveHNoYWRvdztcclxuICAgIH1cclxufVxyXG5cclxudWwge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5cclxubGkge1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgcGFkZGluZzogJHNtKjAuNzUgJHhzICRzbSowLjc1ICR4bDtcclxuICAgIGJhY2tncm91bmQ6ICRuYXZ5O1xyXG4gICAgQGluY2x1ZGUgZm9udCgkd2hpdGUsICRzbSoxLjEyLCAkbm9ybWFsLCAkYmFzZSk7XHJcbiAgICB0cmFuc2l0aW9uOiAwLjNzO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogJHhzO1xyXG4gICAgYm9yZGVyLXJhZGl1czogJG1kO1xyXG4gICAgcGFkZGluZzogJHNtKjAuNyAkeGw7XHJcbiAgICBib3gtc2hhZG93OiAwICRzbSowLjI1ICRzbSowLjI1ICRib3hzaGFkb3c7XHJcbiAgICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xyXG4gICAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcclxuICAgIC1tcy11c2VyLXNlbGVjdDogbm9uZTtcclxuICAgIHVzZXItc2VsZWN0OiBub25lO1xyXG5cclxuICAgICY6bnRoLWNoaWxkKDApIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAkc20qMS4yO1xyXG4gICAgfVxyXG5cclxuICAgICY6bnRoLWNoaWxkKG9kZCkge1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICRwZXJpd2lua2xlO1xyXG4gICAgfVxyXG5cclxuICAgICYuY2hlY2tlZCB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogJGdyZXk7XHJcbiAgICAgICAgY29sb3I6ICR3aGl0ZTtcclxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcclxuXHJcbiAgICAgICAgJjo6YmVmb3JlIHtcclxuICAgICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgYm9yZGVyOiAkd2hpdGUgc29saWQ7XHJcbiAgICAgICAgICAgIGJvcmRlci13aWR0aDogMCAkc20qMC4xMjUgJHNtKjAuMTI1IDA7XHJcbiAgICAgICAgICAgIHRvcDogJHNtKjAuNjI1O1xyXG4gICAgICAgICAgICBsZWZ0OiAkc207XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAkc207XHJcbiAgICAgICAgICAgIHdpZHRoOiAkeHM7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiQHVzZSAnLi4vdXRpbGl0aWVzJyBhcyAqO1xyXG5cclxuLmNsb3NlIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgcGFkZGluZzogJHNtKjAuNzUgJHNtICRzbSowLjc1ICRzbTtcclxufVxyXG5cclxuLmFkZEJ0biB7XHJcbiAgICBwYWRkaW5nOiAkc207XHJcbiAgICB3aWR0aDogMjAlO1xyXG4gICAgYmFja2dyb3VuZDogJHN1bnllbGxvdztcclxuICAgIGNvbG9yOiAkYmx1ZWJsYWNrO1xyXG4gICAgQGluY2x1ZGUgZm9udCgkYmx1ZWJsYWNrLCRzbSwkbWVkaXVtLCRiYXNlKTtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgdHJhbnNpdGlvbjogMC4zcztcclxuICAgIGJvcmRlci1yYWRpdXM6ICRtZDtcclxuICAgIGJveC1zaGFkb3c6IDAgJHNtKjAuMjUgJHNtKjAuMjUgJGJveHNoYWRvdztcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufSIsIkB1c2UgJy4uL3V0aWxpdGllcycgYXMgKjtcclxuXHJcbi5tb2RhbC1jb250YWluZXIge1xyXG5cclxuICAgIC5tb2RhbCB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgb3ZlcmZsb3c6IG5vbmU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1vZGFsYmxhY2s7XHJcbiAgICB9XHJcblxyXG4gICAgLm1vZGFsLXR4dCB7XHJcbiAgICAgICAgbWFyZ2luOiAxNSUgYXV0bztcclxuICAgICAgICBwYWRkaW5nOiAkc207XHJcbiAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgcGFkZGluZzogJGxnO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBhbmltYXRpb246IG1vZGFsUG9wIDAuNXMgZWFzZS1pbi1vdXQ7XHJcbiAgICAgICAgLXdlYmtpdC1hbmltYXRpb246IG1vZGFsUG9wIDAuNXMgZWFzZS1pbi1vdXQ7XHJcbiAgICB9XHJcblxyXG4gICAgI2Nsb3NlLW1vZGFsIHtcclxuICAgICAgICBjb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUpO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6ICR4bCoyO1xyXG4gICAgICAgIHJpZ2h0OiAkc20qNC41O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogJHNtKjEuNzU7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBcclxuICAgICAgICAmOmhvdmVyLFxyXG4gICAgICAgICY6Zm9jdXMge1xyXG4gICAgICAgICAgICBjb2xvcjogJHJlZDtcclxuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5hbGVydC1oZWFkaW5nIHtcclxuICAgICAgICBmb250LXNpemU6ICRzbSoyLjI7XHJcbiAgICAgICAgbWFyZ2luOiAkc20gYXV0byAkc20qMC42O1xyXG4gICAgfVxyXG5cclxuICAgIC5hbGVydC1tc3NnIHtcclxuICAgICAgICBAaW5jbHVkZSBmb250KCR3aGl0ZSwgJHNtLCAkbm9ybWFsLCAkaXRhbGljKTtcclxuICAgIH1cclxufSIsIkB1c2UgJy4uL3V0aWxpdGllcycgYXMgKjtcclxuXHJcbmZvb3RlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAkc20gJHNtKjIgJHNtKjEuNTtcclxuXHJcbiAgICBwIHtcclxuICAgICAgICBAaW5jbHVkZSBmb250KCR3aGl0ZSwgJHNtKjAuOSwgJG5vcm1hbCwgJG5vcm1hbCk7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIG1hcmdpbi10b3A6ICR4cztcclxuICAgIH1cclxufSIsIkBrZXlmcmFtZXMgbW9kYWxQb3Age1xyXG4gICAgMCUge1xyXG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMCk7XHJcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDApO1xyXG4gICAgfVxyXG4gICAgMTAwJSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcclxuICAgICAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSk7XHJcbiAgICB9XHJcbn0iLCJAdXNlICcuLi91dGlsaXRpZXMnIGFzICo7XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDoxMDI0cHgpIHtcclxuICAgIC5jbG9zZTpob3ZlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHJlZDtcclxuICAgICAgICBjb2xvcjogJHdoaXRlO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6ICRtZDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLmFkZEJ0bjpob3ZlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG5hdnk7XHJcbiAgICAgICAgY29sb3I6ICR3aGl0ZTtcclxuICAgIH1cclxufSJdfQ== */
